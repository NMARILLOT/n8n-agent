#!/usr/bin/env python3
"""
Fix delete_idea tool - Notion API only supports archiving, not true deletion
"""

import json
from pathlib import Path

def fix_delete_idea():
    workflow_path = Path("Agent Telegram - Dev Nico Perso/workflow/MCP - Id√©e Dev Nico (Perso) (1).json")

    with open(workflow_path, 'r', encoding='utf-8') as f:
        workflow = json.load(f)

    changes_made = []

    for node in workflow['nodes']:
        # Fix delete_idea tool description
        if node['name'] == 'delete_idea':
            old_desc = node['parameters'].get('description', '')
            node['parameters']['description'] = (
                "Archive une id√©e dans Notion (√©quivalent √† suppression). "
                "L'id√©e sera archiv√©e et n'appara√Ætra plus dans les recherches. "
                "Note: L'API Notion ne permet pas la suppression d√©finitive, seulement l'archivage."
            )
            changes_made.append(f"‚úì Mis √† jour description de delete_idea")

        # Fix Notion Delete node notes
        elif node['name'] == 'Notion - Delete Idea':
            node['notes'] = (
                "‚ö†Ô∏è Archive l'id√©e dans Notion\n\n"
                "IMPORTANT: L'API Notion ne permet pas la suppression d√©finitive.\n"
                "La page est archiv√©e et n'appara√Æt plus dans les vues, mais existe toujours.\n"
                "C'est une limitation de Notion, pas du workflow."
            )
            # V√©rifier que l'op√©ration est bien 'archive'
            if node['parameters'].get('operation') == 'archive':
                changes_made.append(f"‚úì Mis √† jour notes de Notion - Delete Idea")
            else:
                print(f"‚ö†Ô∏è  ATTENTION: op√©ration est '{node['parameters'].get('operation')}', devrait √™tre 'archive'")

        # Fix Format Delete Response
        elif node['name'] == 'Format Delete Response':
            # V√©rifier le code
            code = node['parameters'].get('jsCode', '')
            if 'supprim√©e avec succ√®s' in code or 'deleted successfully' in code:
                # Corriger le message
                new_code = code.replace(
                    'supprim√©e avec succ√®s',
                    'archiv√©e avec succ√®s'
                ).replace(
                    'deleted successfully',
                    'archived successfully'
                )
                node['parameters']['jsCode'] = new_code
                changes_made.append(f"‚úì Corrig√© message dans Format Delete Response")

    # Sauvegarder
    with open(workflow_path, 'w', encoding='utf-8') as f:
        json.dump(workflow, f, indent=2, ensure_ascii=False)

    return changes_made

def main():
    print("=" * 80)
    print("üîß FIX DELETE_IDEA - Correction de la description")
    print("=" * 80)
    print()
    print("Probl√®me identifi√©:")
    print("  ‚ùå Le tool dit 'suppression d√©finitive' mais Notion archive seulement")
    print("  ‚ùå L'API Notion ne permet PAS la suppression d√©finitive")
    print()
    print("Solution:")
    print("  ‚úÖ Corriger la description pour dire 'archive'")
    print("  ‚úÖ Expliquer la limitation de Notion")
    print("  ‚úÖ Mettre √† jour les messages de succ√®s")
    print()

    changes = fix_delete_idea()

    print("Changements appliqu√©s:")
    for change in changes:
        print(f"  {change}")

    if not changes:
        print("  ‚ö†Ô∏è  Aucun changement n√©cessaire")

    print()
    print("=" * 80)
    print("‚úÖ FIX APPLIQU√â - Pr√™t √† d√©ployer")
    print("=" * 80)

if __name__ == "__main__":
    main()