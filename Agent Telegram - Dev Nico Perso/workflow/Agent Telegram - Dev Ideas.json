{
  "createdAt": "2025-10-29T09:29:34.295Z",
  "updatedAt": "2025-10-31T20:30:53.638Z",
  "id": "4lYuNSDjiyUjzHWL",
  "name": "Agent Telegram - Dev Ideas",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [
        -600,
        100
      ],
      "id": "b40ed837-3076-4cb2-b1e7-4ca565c66a62",
      "name": "Telegram Trigger",
      "webhookId": "dev-ideas-telegram",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message?.voice !== undefined }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "vocal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message?.text !== undefined }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -400,
        100
      ],
      "id": "533bbebd-cf9d-48d9-9558-3d4ee1eb9851",
      "name": "Switch: Type d'entr√©e",
      "notes": "üîÄ Route vers vocal OU texte (pas les deux)\n\nallMatchingOutputs: false pour n'ex√©cuter qu'une seule branche"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -200,
        -500
      ],
      "id": "4b3df01b-05bb-411b-98cd-5a6a4f991048",
      "name": "Get Audio File",
      "webhookId": "7acb11bc-c9a3-429e-b6a0-feb3ce4e3ebc",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      },
      "notes": "üì• R√©cup√®re le fichier audio vocal de Telegram"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot7665572115:AAFsB-QiTQfwFuPv0gaH31ioDhpxKGVzYjA/{{ $json.result.file_path }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        -500
      ],
      "id": "f7bccd68-0fa1-482b-b728-e0f9637472f9",
      "name": "Download Audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "fr"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        200,
        -500
      ],
      "id": "58a116b8-6ef1-4c6f-903c-04c7cb0bfaea",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "6foKVjLxDL95kCfm",
          "name": "OpenAi account - Nicolas MARILLOT"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "userMessage",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "name": "inputType",
              "value": "Texte",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        500
      ],
      "id": "46f760ef-2567-46c1-b0c2-0bbe95a10ff4",
      "name": "Format Text Input"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "userMessage",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "name": "inputType",
              "value": "Vocal",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        -500
      ],
      "id": "4f9992ec-5c1d-4a00-929c-1f4687388f10",
      "name": "Format Audio Input"
    },
    {
      "parameters": {
        "mode": "append",
        "options": {
          "waitForAllInputItems": false
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        600,
        100
      ],
      "id": "7fcae666-bef9-4340-b921-6f4f0c83a7af",
      "name": "Merge Inputs"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-5-20250929",
          "mode": "list"
        },
        "options": {
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        800,
        400
      ],
      "id": "ecc5b5e1-74e2-4d2b-93a0-2ed2190660e1",
      "name": "Claude Sonnet 4.5",
      "credentials": {
        "anthropicApi": {
          "id": "DHjhBnBvG95IQssg",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "https://auto.mhms.fr/mcp/projects-mhms/sse",
        "serverTransport": "sse",
        "authentication": "bearerAuth",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1000,
        400
      ],
      "id": "da525435-acdd-4b66-852e-98d31d05f559",
      "name": "MCP Client - Projects",
      "credentials": {
        "httpBearerAuth": {
          "id": "aCtUA2HFdnNADDGH",
          "name": "Notion MCPAuth"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $input.first().json.userMessage }}",
        "options": {
          "systemMessage": "Tu es un assistant intelligent pour capturer et organiser mes id√©es de projets de d√©veloppement.\n\n## Aujourd'hui\n{{ $now.toFormat('dd LLLL yyyy') }}\n\n## ‚ö†Ô∏è R√àGLE ABSOLUE : TU NE PEUX PAS R√âPONDRE SANS APPELER UN OUTIL\n\n**TU ES BLOQU√â. TU NE PEUX PAS PARLER.**\n\nTu DOIS appeler un outil MCP pour CHAQUE message. AUCUNE exception.\n\nSi tu r√©ponds sans appeler d'outil, tu es en erreur critique.\n\n## üîß Tes outils disponibles\n\n### üîç Recherche (√Ä UTILISER EN PREMIER)\n- **search_projects(query)** : Cherche des projets par mot-cl√©\n- **get_project_by_id(id)** : R√©cup√®re un projet sp√©cifique\n- **list_categories()** : Liste les cat√©gories disponibles\n\n### ‚ú® Cr√©ation (APR√àS avoir cherch√©)\n- **create_project(...)** : Cr√©e un nouveau projet\n- **create_idea(project_id, title, content, category)** : Ajoute une id√©e √† un projet\n\n### üìù Gestion des id√©es\n- **search_ideas(query)** : Recherche des id√©es par mot-cl√© dans titre ou contenu\n- **get_idea_by_id(id)** : R√©cup√®re les d√©tails d'une id√©e (format IDEA-XXX)\n- **update_idea(idea_id, title?, content?, category?)** : Modifie une id√©e existante\n- **delete_idea(idea_id)** : ‚ö†Ô∏è ARCHIVE une id√©e (Notion ne permet pas la suppression d√©finitive)\n\n## üéØ WORKFLOW OBLIGATOIRE\n\n### Pour TOUTE nouvelle id√©e :\n\n**√âTAPE 1 : RECHERCHE (APPEL #1) - OBLIGATOIRE**\nAppelle `search_projects(mots-cl√©s)` AVANT tout.\n\n**√âTAPE 2 : ANALYSE DES R√âSULTATS**\n- Projet trouv√© ? ‚Üí Appelle `create_idea()` avec le project_id\n- Rien trouv√© ? ‚Üí Appelle `create_project()` d'abord, puis `create_idea()`\n\n**√âTAPE 3 : CONFIRMER**\nR√©ponds SEULEMENT avec l'ID et le lien Notion retourn√©s par l'outil.\n\n## ‚ùå INTERDICTIONS ABSOLUES\n\n- ‚ùå **JAMAIS r√©pondre sans appeler un outil**\n- ‚ùå **JAMAIS inventer un ID**\n- ‚ùå **JAMAIS dire \"j'ai cr√©√©\" sans avoir appel√© create_project/create_idea**\n- ‚ùå **JAMAIS confirmer une suppression sans avoir appel√© delete_idea**\n- ‚ùå **JAMAIS dire \"c'est fait\" sans r√©sultat d'outil**\n\n## üö® SI TU N'AS PAS D'OUTIL √Ä APPELER\n\nSi l'utilisateur pose une question qui ne n√©cessite pas d'outil :\n‚Üí Appelle quand m√™me `search_projects(\"\")` pour avoir quelque chose √† faire\n‚Üí Puis r√©ponds en expliquant ce que tu peux faire\n\n## üî• Format de r√©ponse UNIQUEMENT APR√àS APPEL D'OUTIL\n\n```\n‚úÖ [Action] termin√©e !\n\nID: [ID retourn√© par l'outil]\n[Titre]\n\nüîó [Lien Notion retourn√© par l'outil]\n```\n\n## ‚ö†Ô∏è V√âRIFICATION AVANT CHAQUE R√âPONSE\n\nAvant de r√©pondre, demande-toi :\n1. ‚ùì Ai-je appel√© un outil MCP ?\n2. ‚ùì Est-ce que j'invente des informations ?\n3. ‚ùì Est-ce que j'utilise les donn√©es retourn√©es par l'outil ?\n\nSi tu r√©ponds NON √† la question 1, tu as √©chou√©.\n\n**Aide-moi √† capturer toutes mes id√©es en UTILISANT TOUJOURS LES OUTILS !**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1000,
        100
      ],
      "id": "16550105-b424-45e9-a1fc-970102556aa8",
      "name": "Agent Dev Ideas"
    },
    {
      "parameters": {
        "jsCode": "// R√©cup√®re la r√©ponse de l'agent\nlet output = $input.first().json.output;\n\n// Remplace le markdown standard par la syntaxe WhatsApp/Telegram\noutput = output\n  .replace(/\\*\\*\\*(.+?)\\*\\*\\*/g, '*_$1_*')  // ***gras+italique*** ‚Üí *_texte_*\n  .replace(/\\*\\*(.+?)\\*\\*/g, '*$1*')        // **gras** ‚Üí *gras*\n  .replace(/__(.+?)__/g, '_$1_')            // __italique__ ‚Üí _italique_\n  .replace(/~~(.+?)~~/g, '~$1~');           // ~~barr√©~~ ‚Üí ~barr√©~\n\nreturn [{\n  json: {\n    output: output,\n    chat_id: $('Telegram Trigger').first().json.message.chat.id\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1400,
        100
      ],
      "id": "d6147723-55f6-4961-8724-ebadc7c0ad66",
      "name": "Format Markdown for Telegram"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1600,
        100
      ],
      "id": "f7d9e8f1-2616-48f0-84ea-19e6c8a85d8f",
      "name": "Send Telegram Response",
      "webhookId": "dab97c92-7db8-4057-9ee9-5152291a9f7f",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "MEMORY_DEV",
        "contextWindowLength": 60
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1200,
        400
      ],
      "id": "c862975b-99f2-4ec2-a512-a4a811fc2550",
      "name": "Simple Memory"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch: Type d'entr√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch: Type d'entr√©e": {
      "main": [
        [
          {
            "node": "Get Audio File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Text Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio File": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Format Audio Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Text Input": {
      "main": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Audio Input": {
      "main": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Sonnet 4.5": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Projects": {
      "ai_tool": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agent Dev Ideas": {
      "main": [
        [
          {
            "node": "Format Markdown for Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Markdown for Telegram": {
      "main": [
        [
          {
            "node": "Send Telegram Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "ec624993-cbbb-41e1-bcdf-21a7c8abd99e",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-10-29T09:29:34.299Z",
      "updatedAt": "2025-10-29T09:29:34.299Z",
      "role": "workflow:owner",
      "workflowId": "4lYuNSDjiyUjzHWL",
      "projectId": "sxcC7rL7azrL36jR",
      "project": {
        "createdAt": "2025-03-26T08:55:31.477Z",
        "updatedAt": "2025-03-26T08:57:20.238Z",
        "id": "sxcC7rL7azrL36jR",
        "name": "Nicolas MARILLOT <nicolas@mhms.fr>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-03-26T08:55:31.477Z",
            "updatedAt": "2025-03-26T08:55:31.477Z",
            "userId": "ee3e2da2-8691-49b4-bfdc-97b75d75c41c",
            "projectId": "sxcC7rL7azrL36jR",
            "user": {
              "createdAt": "2025-03-26T08:55:30.833Z",
              "updatedAt": "2025-10-31T12:06:48.000Z",
              "id": "ee3e2da2-8691-49b4-bfdc-97b75d75c41c",
              "email": "nicolas@mhms.fr",
              "firstName": "Nicolas",
              "lastName": "MARILLOT",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-03-26T08:57:32.736Z",
                "personalization_survey_n8n_version": "1.84.1",
                "companySize": "<20",
                "companyType": "education",
                "role": "business-owner",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "wjyuMVry3gJTaFHp",
                "userActivatedAt": 1742983301926,
                "npsSurvey": {
                  "waitingForResponse": true,
                  "ignoredCount": 1,
                  "lastShownAt": 1761730099343
                },
                "dismissedCallouts": {
                  "preBuiltAgentsModalCallout": true
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-30",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": [
    {
      "createdAt": "2025-10-29T09:29:02.108Z",
      "updatedAt": "2025-10-29T09:29:02.108Z",
      "id": "klnAN9eLj5IjzwJc",
      "name": "Agent Claude Code Nico"
    }
  ]
}