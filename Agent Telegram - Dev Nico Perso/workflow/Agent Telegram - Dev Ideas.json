{
  "name": "Agent Telegram - Dev Ideas",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [
        -250,
        -100
      ],
      "id": "b40ed837-3076-4cb2-b1e7-4ca565c66a62",
      "name": "Telegram Trigger",
      "webhookId": "dev-ideas-telegram",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message?.voice !== undefined }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "vocal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message?.text !== undefined }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -250,
        100
      ],
      "id": "533bbebd-cf9d-48d9-9558-3d4ee1eb9851",
      "name": "Switch: Type d'entr√©e",
      "notes": "üîÄ Route vers vocal OU texte (pas les deux)\n\nallMatchingOutputs: false pour n'ex√©cuter qu'une seule branche"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        350,
        -350
      ],
      "id": "4b3df01b-05bb-411b-98cd-5a6a4f991048",
      "name": "Get Audio File",
      "webhookId": "7acb11bc-c9a3-429e-b6a0-feb3ce4e3ebc",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      },
      "notes": "üì• R√©cup√®re le fichier audio vocal de Telegram"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot7665572115:AAFsB-QiTQfwFuPv0gaH31ioDhpxKGVzYjA/{{ $json.result.file_path }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        -350
      ],
      "id": "f7bccd68-0fa1-482b-b728-e0f9637472f9",
      "name": "Download Audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "fr"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        850,
        -350
      ],
      "id": "58a116b8-6ef1-4c6f-903c-04c7cb0bfaea",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "6foKVjLxDL95kCfm",
          "name": "OpenAi account - Nicolas MARILLOT"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "userMessage",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "name": "inputType",
              "value": "Texte",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        450,
        150
      ],
      "id": "46f760ef-2567-46c1-b0c2-0bbe95a10ff4",
      "name": "Format Text Input"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "userMessage",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "name": "inputType",
              "value": "Vocal",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1100,
        -350
      ],
      "id": "4f9992ec-5c1d-4a00-929c-1f4687388f10",
      "name": "Format Audio Input"
    },
    {
      "parameters": {
        "mode": "append",
        "options": {
          "waitForAllInputItems": false
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1024,
        -32
      ],
      "id": "7fcae666-bef9-4340-b921-6f4f0c83a7af",
      "name": "Merge Inputs"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-5-20250929",
          "mode": "list"
        },
        "options": {
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1750,
        150
      ],
      "id": "ecc5b5e1-74e2-4d2b-93a0-2ed2190660e1",
      "name": "Claude Sonnet 4.5",
      "credentials": {
        "anthropicApi": {
          "id": "DHjhBnBvG95IQssg",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "https://auto.mhms.fr/mcp/projects-mhms/sse",
        "serverTransport": "sse",
        "authentication": "bearerAuth",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [
        1950,
        150
      ],
      "id": "da525435-acdd-4b66-852e-98d31d05f559",
      "name": "MCP Client - Projects",
      "credentials": {
        "httpBearerAuth": {
          "id": "aCtUA2HFdnNADDGH",
          "name": "Notion MCPAuth"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $input.first().json.userMessage }}",
        "options": {
          "systemMessage": "Tu es un assistant intelligent pour capturer et organiser mes id√©es de projets de d√©veloppement.\n\n## Aujourd'hui\n{{ $now.toFormat('dd LLLL yyyy') }}\n\n## ‚ö†Ô∏è R√àGLE : TOUJOURS UTILISER LES OUTILS MCP\n\nTu DOIS utiliser les outils MCP pour CHAQUE requ√™te. Jamais de r√©ponse sans appel aux outils.\n\n## üîß Tes outils disponibles\n\n### üîç Recherche (√Ä UTILISER EN PREMIER)\n- **search_projects(query)** : Cherche des projets par mot-cl√©\n- **get_project_by_id(id)** : R√©cup√®re un projet sp√©cifique\n- **list_categories()** : Liste les cat√©gories disponibles\n\n### ‚ú® Cr√©ation (APR√àS avoir cherch√©)\n- **create_project(...)** : Cr√©e un nouveau projet\n- **create_idea(project_id, title, content, category)** : Ajoute une id√©e √† un projet\n\n### üìù Gestion des id√©es\n- **search_ideas(query)** : Recherche des id√©es par mot-cl√© dans titre ou contenu\n- **get_idea_by_id(id)** : R√©cup√®re les d√©tails d'une id√©e (format IDEA-XXX)\n- **update_idea(idea_id, title?, content?, category?)** : Modifie une id√©e existante\n- **delete_idea(idea_id)** : ‚ö†Ô∏è SUPPRIME D√âFINITIVEMENT une id√©e (irr√©versible)\n\n## üéØ WORKFLOW OBLIGATOIRE\n\n### Pour TOUTE nouvelle id√©e :\n\n**√âTAPE 1 : RECHERCHE (APPEL #1)**\nAppelle `search_projects(mots-cl√©s)` en premier.\n\n**√âTAPE 2 : ANALYSE**\n- Projet trouv√© ? ‚Üí `create_idea()` avec le project_id\n- Rien trouv√© ? ‚Üí `create_project()` pour cr√©er le projet\n\n**√âTAPE 3 : CONFIRMER**\nR√©ponds avec l'ID et le lien Notion.\n\n## üìù Exemples\n\n### Exemple 1 : Nouveau projet\n```\nUser: \"App mobile de suivi d'habitudes\"\n\nAppel #1: search_projects(\"habitudes tracking habit\")\n‚Üí Aucun r√©sultat\n\nAppel #2: create_project(\n  name=\"Habit Tracker App\",\n  category=\"UX/UI\",\n  type=\"App\",\n  description=\"Application mobile pour suivre ses habitudes quotidiennes avec streaks, statistiques et rappels personnalisables.\",\n  priority=\"Moyenne\",\n  status=\"Id√©e\",\n  tech_stack=\"React Native, Expo, SQLite\"\n)\n\nR√©ponse: \"‚úÖ Projet cr√©√© !\n\nID: PROJ-ABC123\nHabit Tracker App\n\nüîó [lien]\"\n```\n\n### Exemple 2 : Ajout √† projet existant\n```\nUser: \"Dark mode pour mon blog\"\n\nAppel #1: search_projects(\"blog\")\n‚Üí [PROJ-BLOG-456] Personal Tech Blog\n\nAppel #2: create_idea(\n  project_id=\"PROJ-BLOG-456\",\n  title=\"Dark mode\",\n  content=\"Ajouter un toggle dark/light mode avec sauvegarde de pr√©f√©rence\",\n  category=\"Am√©lioration\"\n)\n\nR√©ponse: \"‚úÖ Id√©e ajout√©e !\n\nID: IDEA-XYZ789\nDark mode pour Personal Tech Blog\n\nüîó [lien]\"\n```\n\n### Exemple 3 : Id√©e technique\n```\nUser: \"API GraphQL pour mes donn√©es\"\n\nAppel #1: search_projects(\"API GraphQL\")\n‚Üí Aucun r√©sultat\n\nAppel #2: create_project(\n  name=\"Universal GraphQL API\",\n  category=\"Infrastructure\",\n  type=\"Feature\",\n  description=\"API GraphQL centralis√©e pour exposer toutes mes donn√©es personnelles (notes, bookmarks, habits, etc) avec authentification JWT.\",\n  priority=\"Basse\",\n  status=\"Id√©e\",\n  tech_stack=\"NestJS, TypeScript, Docker\"\n)\n\nR√©ponse: \"‚úÖ Projet cr√©√© !\n\nID: PROJ-GQL-999\nUniversal GraphQL API\n\nüîó [lien]\"\n```\n\n### Exemple 4 : Rechercher une id√©e\n```\nUser: \"Montre-moi toutes mes id√©es sur le dark mode\"\n\nAppel: search_ideas(\"dark mode\")\n‚Üí [IDEA-456] Dark mode pour blog\n‚Üí [IDEA-789] Dark mode pr√©f√©rences utilisateur\n\nR√©ponse: \"J'ai trouv√© 2 id√©es sur le dark mode:\n\n1. Dark mode pour blog (IDEA-456)\n2. Dark mode pr√©f√©rences utilisateur (IDEA-789)\"\n```\n\n### Exemple 5 : Modifier une id√©e\n```\nUser: \"Change le titre de IDEA-456 en 'Th√®me sombre complet'\"\n\nAppel #1: get_idea_by_id(\"IDEA-456\")\n‚Üí Dark mode pour blog\n\nAppel #2: update_idea(\n  idea_id=\"IDEA-456\",\n  title=\"Th√®me sombre complet\"\n)\n\nR√©ponse: \"‚úÖ Id√©e modifi√©e !\n\nIDEA-456 : Th√®me sombre complet\"\n```\n\n### Exemple 6 : Supprimer une id√©e\n```\nUser: \"Supprime l'id√©e IDEA-789\"\n\nAppel #1: get_idea_by_id(\"IDEA-789\")\n‚Üí Dark mode pr√©f√©rences utilisateur\n\nAppel #2: delete_idea(\"IDEA-789\")\n\nR√©ponse: \"‚úÖ Id√©e supprim√©e\n\n‚ö†Ô∏è IDEA-789 a √©t√© supprim√©e d√©finitivement\"\n```\n\n## ‚ùå INTERDICTIONS\n\n- ‚ùå Ne jamais s'arr√™ter apr√®s search sans cr√©er\n- ‚ùå Ne jamais inventer d'IDs\n- ‚ùå Ne jamais demander confirmation\n\n## üî• Param√®tres\n\n### create_project\n```javascript\n{\n  name: string,          // Nom descriptif\n  category: string,      // Exp√©rimentation | Tooling | Infrastructure | UX/UI | Fonctionnalit√©\n  type: string,          // Proof of Concept | Outil interne | Feature | Site | App\n  description: string,   // Description compl√®te (2+ phrases)\n  priority: string,      // Urgent | Haute | Moyenne | Basse | Id√©e\n  status: string,        // Id√©e | En cours | En attente | Termin√© | Abandonn√©\n  tech_stack: string     // Techs s√©par√©es par virgules (ex: \"React, NestJS, TypeScript\")\n}\n```\n\n### create_idea\n```javascript\n{\n  project_id: string,    // ID exact (PROJ-XXX)\n  title: string,         // Titre court\n  content: string,       // Description d√©taill√©e\n  category: string       // Nouvelle fonctionnalit√© | Am√©lioration | Bug fix | Refactoring | Documentation\n}\n```\n\n### search_ideas\n```javascript\n{\n  query: string          // Mot-cl√© pour rechercher dans titre/contenu des id√©es\n}\n```\n\n### get_idea_by_id\n```javascript\n{\n  id: string             // ID de l'id√©e (format IDEA-XXX)\n}\n```\n\n### update_idea\n```javascript\n{\n  idea_id: string,       // ID exact de l'id√©e (IDEA-XXX)\n  title?: string,        // Nouveau titre (optionnel)\n  content?: string,      // Nouveau contenu (optionnel)\n  category?: string      // Nouvelle cat√©gorie (optionnel)\n}\n// Note: Les champs non fournis conservent leur valeur actuelle\n```\n\n### delete_idea\n```javascript\n{\n  idea_id: string        // ID de l'id√©e √† supprimer (IDEA-XXX)\n}\n// ‚ö†Ô∏è ATTENTION: Suppression IRR√âVERSIBLE\n```\n\n## üéØ Comportement\n\n1. **Search d'abord** : Toujours chercher avant de cr√©er\n2. **Agis directement** : Pas de confirmation\n3. **Sois concis** : R√©ponse courte avec ID et lien\n\n**Aide-moi √† capturer toutes mes id√©es !**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1950,
        -100
      ],
      "id": "16550105-b424-45e9-a1fc-970102556aa8",
      "name": "Agent Dev Ideas"
    },
    {
      "parameters": {
        "jsCode": "// R√©cup√®re la r√©ponse de l'agent\nlet output = $input.first().json.output;\n\n// Remplace le markdown standard par la syntaxe WhatsApp/Telegram\noutput = output\n  .replace(/\\*\\*\\*(.+?)\\*\\*\\*/g, '*_$1_*')  // ***gras+italique*** ‚Üí *_texte_*\n  .replace(/\\*\\*(.+?)\\*\\*/g, '*$1*')        // **gras** ‚Üí *gras*\n  .replace(/__(.+?)__/g, '_$1_')            // __italique__ ‚Üí _italique_\n  .replace(/~~(.+?)~~/g, '~$1~');           // ~~barr√©~~ ‚Üí ~barr√©~\n\nreturn [{\n  json: {\n    output: output,\n    chat_id: $('Telegram Trigger').first().json.message.chat.id\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2750,
        -100
      ],
      "id": "d6147723-55f6-4961-8724-ebadc7c0ad66",
      "name": "Format Markdown for Telegram"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2750,
        100
      ],
      "id": "f7d9e8f1-2616-48f0-84ea-19e6c8a85d8f",
      "name": "Send Telegram Response",
      "webhookId": "dab97c92-7db8-4057-9ee9-5152291a9f7f",
      "credentials": {
        "telegramApi": {
          "id": "tecnNETDK9d3pNmM",
          "name": "Telegram Nico Dev (perso)"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "MEMORY_DEV",
        "contextWindowLength": 60
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2150,
        150
      ],
      "id": "c862975b-99f2-4ec2-a512-a4a811fc2550",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "content": "## üì® INPUT\n\nMessages Telegram entrants",
        "height": 400,
        "width": 500,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -500,
        -300
      ],
      "id": "sticky_üì®_INPUT",
      "name": "üì® INPUT",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üé§ VOCAL PROCESSING\n\nTraitement des messages vocaux",
        "height": 300,
        "width": 1200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        -500
      ],
      "id": "sticky_üé§_VOCAL_PROCESSING",
      "name": "üé§ VOCAL PROCESSING",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìù TEXT PROCESSING\n\nTraitement des messages texte",
        "height": 300,
        "width": 500,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        0
      ],
      "id": "sticky_üìù_TEXT_PROCESSING",
      "name": "üìù TEXT PROCESSING",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ü§ñ INTELLIGENCE ARTIFICIELLE\n\nClaude Sonnet + MCP + Memory",
        "height": 600,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1600,
        -300
      ],
      "id": "sticky_ü§ñ_AI_AGENT",
      "name": "ü§ñ AI AGENT",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üì§ OUTPUT\n\nR√©ponse Telegram",
        "height": 400,
        "width": 500,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2500,
        -300
      ],
      "id": "sticky_üì§_OUTPUT",
      "name": "üì§ OUTPUT",
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch: Type d'entr√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch: Type d'entr√©e": {
      "main": [
        [
          {
            "node": "Get Audio File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Text Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio File": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Format Audio Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Text Input": {
      "main": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Audio Input": {
      "main": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Sonnet 4.5": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Projects": {
      "ai_tool": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agent Dev Ideas": {
      "main": [
        [
          {
            "node": "Format Markdown for Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Markdown for Telegram": {
      "main": [
        [
          {
            "node": "Send Telegram Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent Dev Ideas",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b2abf0a0-2a32-4cd9-ab8c-9fd59313026e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0d2863f3b0714240c15cb8a6ef23538e5a369ef4c91a5d3594a61ea64c62ba9c"
  },
  "id": "4lYuNSDjiyUjzHWL",
  "tags": [
    {
      "createdAt": "2025-10-29T09:29:02.108Z",
      "updatedAt": "2025-10-29T09:29:02.108Z",
      "id": "klnAN9eLj5IjzwJc",
      "name": "Agent Claude Code Nico"
    }
  ]
}